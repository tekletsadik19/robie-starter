include: package:very_good_analysis/analysis_options.6.0.0.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.config.dart"
    - "build/**"
    - ".fvm/**"
  
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
  
  errors:
    # Treat warnings as errors in CI
    invalid_annotation_target: error
    missing_required_param: error
    missing_return: error
    todo: ignore
    fixme: ignore

linter:
  rules:
    # Disable overly strict documentation rules for development
    public_member_api_docs: false
    
    # Enable strict type checking
    always_declare_return_types: true
    always_specify_types: false  # Let Dart infer types when obvious
    annotate_overrides: true
    avoid_annotating_with_dynamic: true
    avoid_as: true
    avoid_catches_without_on_clauses: false  # Allow generic catch clauses
    avoid_catching_errors: true
    avoid_dynamic_calls: true
    avoid_empty_else: true
    avoid_equals_and_hash_code_on_mutable_classes: true
    avoid_escaping_inner_quotes: true
    avoid_field_initializers_in_const_classes: true
    avoid_function_literals_in_foreach_calls: true
    avoid_implementing_value_types: true
    avoid_init_to_null: true
    avoid_js_rounded_ints: true
    avoid_null_checks_in_equality_operators: true
    avoid_positional_boolean_parameters: false  # Allow positional boolean parameters
    avoid_private_typedef_functions: true
    avoid_redundant_argument_values: true
    avoid_relative_lib_imports: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    avoid_returning_null: true
    avoid_returning_null_for_future: true
    avoid_returning_null_for_void: true
    avoid_returning_this: true
    avoid_setters_without_getters: true
    avoid_shadowing_type_parameters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    avoid_types_as_parameter_names: true
    avoid_unnecessary_containers: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    avoid_web_libraries_in_flutter: true
    
    # Code organization
    always_put_control_body_on_new_line: false  # Allow single-line control bodies
    always_put_required_named_parameters_first: true
    always_require_non_null_named_parameters: true
    always_use_package_imports: true
    cascade_invocations: false  # Allow non-cascade invocations
    combinators_ordering: true
    conditional_uri_does_not_exist: true
    directives_ordering: false  # Allow flexible import ordering
    do_not_use_environment: true
    flutter_style_todos: true
    leading_newlines_in_multiline_strings: true
    library_private_types_in_public_api: true
    lines_longer_than_80_chars: false  # Allow longer lines for readability
    missing_whitespace_between_adjacent_strings: true
    no_default_cases: true
    no_runtimeType_toString: true
    noop_primitive_operations: true
    omit_local_variable_types: true
    one_member_abstracts: true
    only_throw_errors: true
    parameter_assignments: true
    prefer_asserts_in_initializer_lists: true
    prefer_asserts_with_message: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    prefer_constructors_over_static_methods: false  # Allow static methods
    prefer_contains: true
    prefer_equal_for_default_values: true
    prefer_expression_function_bodies: false  # Allow block function bodies
    prefer_final_fields: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_function_declarations_over_variables: true
    prefer_generic_function_type_aliases: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_if_null_operators: true
    prefer_initializing_formals: true
    prefer_inlined_adds: true
    prefer_int_literals: true
    prefer_interpolation_to_compose_strings: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_iterable_whereType: true
    prefer_mixin: true
    prefer_null_aware_operators: true
    prefer_relative_imports: false  # Use package imports for consistency
    prefer_single_quotes: true
    prefer_spread_collections: true
    prefer_typing_uninitialized_variables: true
    prefer_void_to_null: true
    
    # Performance and best practices
    provide_deprecation_message: true
    sized_box_for_whitespace: true
    sized_box_shrink_expand: true
    sort_child_properties_last: true
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    test_types_in_equals: true
    throw_in_finally: true
    tighten_type_of_initializing_formals: true
    type_annotate_public_apis: false  # Allow type inference for public APIs
    type_init_formals: true
    unawaited_futures: false  # Allow unawaited futures
    unnecessary_await_in_return: true
    unnecessary_brace_in_string_interps: true
    unnecessary_const: true
    unnecessary_constructor_name: true
    unnecessary_getters_setters: true
    unnecessary_lambdas: true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_checks: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_nullable_for_final_variable_declarations: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    unnecessary_statements: true
    unnecessary_string_escapes: true
    unnecessary_string_interpolations: true
    unnecessary_this: true
    unrelated_type_equality_checks: true
    use_build_context_synchronously: true
    use_colored_box: false  # Allow Container with color
    use_decorated_box: true
    use_enums: false  # Allow classes instead of enums
    use_full_hex_values_for_flutter_colors: true
    use_function_type_syntax_for_parameters: true
    use_if_null_to_convert_nulls_to_bools: false  # Allow explicit null checks
    use_is_even_rather_than_modulo: true
    use_key_in_widget_constructors: true
    use_late_for_private_fields_and_variables: true
    use_named_constants: true
    use_raw_strings: true
    use_rethrow_when_possible: true
    use_setters_to_change_properties: true
    use_string_buffers: true
    use_super_parameters: true
    use_test_throws_matchers: true
    use_to_and_as_if_applicable: true
    valid_regexps: true
    void_checks: true
